#pragma once

#ifndef PE_KEY_GUARD
#define PE_KEY_GUARD

#include <SDL.h>

namespace Pe
{
	enum class Key : unsigned int
	{
		K_0 = SDL_SCANCODE_0,
		K_1 = SDL_SCANCODE_1,
		K_2 = SDL_SCANCODE_2,
		K_3 = SDL_SCANCODE_3,
		K_4 = SDL_SCANCODE_4,
		K_5 = SDL_SCANCODE_5,
		K_6 = SDL_SCANCODE_6,
		K_7 = SDL_SCANCODE_7,
		K_8 = SDL_SCANCODE_8,
		K_9 = SDL_SCANCODE_9,

		K_F1 = SDL_SCANCODE_F1,
		K_F2 = SDL_SCANCODE_F2,
		K_F3 = SDL_SCANCODE_F3,
		K_F4 = SDL_SCANCODE_F4,
		K_F5 = SDL_SCANCODE_F5,
		K_F6 = SDL_SCANCODE_F6,
		K_F7 = SDL_SCANCODE_F7,
		K_F8 = SDL_SCANCODE_F8,
		K_F9 = SDL_SCANCODE_F9,
		K_F10 = SDL_SCANCODE_F10,
		K_F11 = SDL_SCANCODE_F11,
		K_F12 = SDL_SCANCODE_F12,

		K_A = SDL_SCANCODE_A,
		K_B = SDL_SCANCODE_B,
		K_C = SDL_SCANCODE_C,
		K_D = SDL_SCANCODE_D,
		K_E = SDL_SCANCODE_E,
		K_F = SDL_SCANCODE_F,
		K_G = SDL_SCANCODE_G,
		K_H = SDL_SCANCODE_H,
		K_I = SDL_SCANCODE_I,
		K_J = SDL_SCANCODE_J,
		K_K = SDL_SCANCODE_K,
		K_L = SDL_SCANCODE_L,
		K_M = SDL_SCANCODE_M,
		K_N = SDL_SCANCODE_N,
		K_O = SDL_SCANCODE_O,
		K_P = SDL_SCANCODE_P,
		K_Q = SDL_SCANCODE_Q,
		K_R = SDL_SCANCODE_R,
		K_S = SDL_SCANCODE_S,
		K_T = SDL_SCANCODE_T,
		K_U = SDL_SCANCODE_U,
		K_V = SDL_SCANCODE_V,
		K_W = SDL_SCANCODE_W,
		K_X = SDL_SCANCODE_X,
		K_Y = SDL_SCANCODE_Y,
		K_Z = SDL_SCANCODE_Z,

		K_UP = SDL_SCANCODE_UP,
		K_DOWN = SDL_SCANCODE_DOWN,
		K_LEFT = SDL_SCANCODE_LEFT,
		K_RIGHT = SDL_SCANCODE_RIGHT,

		Count,
	};
}

// Fix SDL macro.
#ifdef main
#undef main
#endif

#endif // GUARD